apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "marklogic.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "marklogic.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "marklogic.headlessServiceName" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "marklogic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "marklogic.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "marklogic.serviceAccountName" . }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8}}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      containers:
        - name: marklogic-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          env:
            - name: MARKLOGIC_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "marklogic.fullname" . }}
                  key: username
            - name: MARKLOGIC_ADMIN_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: {{ include "marklogic.fullname" . }}
                    key: password
          envFrom:
            - configMapRef:
                name: {{ include "marklogic.fullname" . }}
          ports:
            - containerPort: 7997
              name: health-check
            - containerPort: 7998
              name: cluster-port
            - containerPort: 7999
              name: cluster-port2
            - containerPort: 8000
              name: app-services
            - containerPort: 8001
              name: admin
            - containerPort: 8002
              name: manage
            {{- if .Values.extraContainerPorts }}
              {{- toYaml .Values.extraContainerPorts | nindent 12 }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - bash
                  - '-c'
                  - |
                    log () {
                      local TIMESTAMP=$(date +"%Y-%m-%d %T.%3N")
                      echo "${TIMESTAMP} $@" > /proc/$pid/fd/1
                    }

                    pid=$(ps aux | grep -i '/bin/bas[h] /usr' | awk {'print $2'})
                    log "Info: [prestop] Prestop Hook Execution"

                    my_host=$(hostname -f)

                    log "Info: [prestop] MarkLogic Pod Hostname: "$my_host

                    for ((i = 0; i < 5; i = i + 1)); do
                        res_code=$(curl --anyauth --user $MARKLOGIC_ADMIN_USERNAME:$MARKLOGIC_ADMIN_PASSWORD \
                            -o /dev/null -m 10 -s -w %{http_code} \
                            -i -X POST --data "state=shutdown&failover=true" \
                            -H "Content-type: application/x-www-form-urlencoded" \
                            http://localhost:8002/manage/v2/hosts/$my_host?format=json)

                        if [[ ${res_code} -eq 202 ]]; then
                            log "Info: [prestop] Host shut down response code: "$res_code

                            while (true)
                            do
                               ml_status=$(service MarkLogic status)
                               log "Info: [prestop] MarkLogic Status: "$ml_status
                               if [[ "$ml_status" =~ "running" ]]; then
                                  sleep 5s
                                  continue
                               else
                                  break
                               fi
                            done
                            break
                        else
                            log "ERROR: [prestop] Retry Attempt: "$i
                            log "ERROR: [prestop] Host shut down expected response code 202, got "$res_code
                            sleep 10s
                        fi
                    done
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: health-check
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: health-check
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - ls
                - /var/opt/MarkLogic/ready
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
      dnsConfig:
        searches:
          - {{ include "marklogic.headlessURL" . }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ include "marklogic.fullname" . }}-registry
      {{- end }}
      {{- if or (not .Values.persistence.enabled) (.Values.extraVolumes) }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: datadir
          emptyDir: {}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels: 
          {{- include "marklogic.selectorLabels" . | nindent 10 }}
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote}}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end}}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
