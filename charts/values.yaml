# Default values for marklogic server.

# Number of Marklogic nodes
replicaCount: 1

# Marklogic image parameters
image:
  repository: store/marklogicdb/marklogic-server
  tag: 10.0-9-centos-1.0.0-ea4
  pullPolicy: IfNotPresent

imagePullSecret: {}
  ## docker hub registry: https://index.docker.io/v1/
  # registry: "https://index.docker.io/v1/"
  # username: "your username"
  # password: "your password"

# Marklogic pods' resource requests and limits
# ref: https://kubernetes.io/docs/user-guide/compute-resources/
# requests:
#   memory: "3000Mi"
#   cpu: "1000m"
# limits:
#   memory: "3000Mi"
#   cpu: "1000m"
resources: {}

nameOverride: ""
fullnameOverride: ""

# Configure Marklogic Admin Username and Password
auth:
  adminUsername: admin
  adminPassword: admin

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Configure options for liveness probe
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-http-request
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Configure options for readiness probe
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Configure options for startup probe
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes
startupProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 20
  timeoutSeconds: 1
  failureThreshold: 30
  successThreshold: 1

# Configure persistence using persistent Volume Claim
# ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
# The "" storageClass will use the default storage class for your cluster. (gp2 for EKS, standard for Minikube)
# If set the enabled to false, it will use EmptyDir volume
persistence:
  enabled: true
  storageClass: ""
  size: 10Gi
  annotations: {}
  accessModes:
    - ReadWriteOnce
  mountPath: /var/opt/MarkLogic
